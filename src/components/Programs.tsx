'use client';

import { useState } from 'react';
import { useScrollAnimation, useStaggeredAnimation } from '@/hooks/useScrollAnimation';

const Programs = () => {
  const [activeTab, setActiveTab] = useState(0);
  const headerRef = useScrollAnimation();
  const gridRef = useStaggeredAnimation(150);

  const programCategories = [
    {
      title: "C√¥ng Ngh·ªá Th√¥ng Tin",
      icon: "üíª",
      programs: [
        {
          name: "L·∫≠p tr√¨nh ph·∫ßn m·ªÅm",
          duration: "3 nƒÉm",
          description: "ƒê√†o t·∫°o k·ªπ nƒÉng l·∫≠p tr√¨nh, ph√°t tri·ªÉn ·ª©ng d·ª•ng web, mobile v√† desktop",
          skills: ["Java", "Python", "React", "Node.js", "Database"],
          career: "L·∫≠p tr√¨nh vi√™n, Ph√°t tri·ªÉn ph·∫ßn m·ªÅm, Full-stack Developer"
        },
        {
          name: "Qu·∫£n tr·ªã m·∫°ng",
          duration: "3 nƒÉm", 
          description: "Qu·∫£n l√Ω h·ªá th·ªëng m·∫°ng, b·∫£o m·∫≠t th√¥ng tin v√† h·∫° t·∫ßng IT",
          skills: ["Network Security", "Linux", "Windows Server", "Cisco", "Cloud Computing"],
          career: "Qu·∫£n tr·ªã vi√™n m·∫°ng, Chuy√™n gia b·∫£o m·∫≠t, System Administrator"
        },
        {
          name: "Thi·∫øt k·∫ø ƒë·ªì h·ªça",
          duration: "3 nƒÉm",
          description: "S√°ng t·∫°o n·ªôi dung th·ªã gi√°c, thi·∫øt k·∫ø UI/UX v√† multimedia",
          skills: ["Photoshop", "Illustrator", "After Effects", "UI/UX Design", "3D Modeling"],
          career: "Graphic Designer, UI/UX Designer, Motion Graphics Artist"
        }
      ]
    },
    {
      title: "Truy·ªÅn Th√¥ng",
      icon: "üì∫",
      programs: [
        {
          name: "B√°o ch√≠ truy·ªÅn th√¥ng",
          duration: "3 nƒÉm",
          description: "K·ªπ nƒÉng vi·∫øt b√°o, s·∫£n xu·∫•t n·ªôi dung v√† qu·∫£n l√Ω truy·ªÅn th√¥ng",
          skills: ["Content Writing", "Video Production", "Social Media", "PR", "Digital Marketing"],
          career: "Nh√† b√°o, Content Creator, PR Specialist, Social Media Manager"
        },
        {
          name: "S·∫£n xu·∫•t phim truy·ªÅn h√¨nh",
          duration: "3 nƒÉm",
          description: "K·ªπ thu·∫≠t quay phim, d·ª±ng phim v√† s·∫£n xu·∫•t ch∆∞∆°ng tr√¨nh truy·ªÅn h√¨nh",
          skills: ["Camera Operation", "Video Editing", "Sound Design", "Lighting", "Directing"],
          career: "ƒê·∫°o di·ªÖn, Quay phim, Bi√™n t·∫≠p vi√™n, Producer"
        },
        {
          name: "Marketing s·ªë",
          duration: "3 nƒÉm",
          description: "Chi·∫øn l∆∞·ª£c marketing online, ph√¢n t√≠ch d·ªØ li·ªáu v√† qu·∫£ng c√°o s·ªë",
          skills: ["Google Ads", "Facebook Ads", "SEO/SEM", "Analytics", "E-commerce"],
          career: "Digital Marketer, SEO Specialist, Data Analyst, E-commerce Manager"
        }
      ]
    }
  ];

  return (
    <section id="programs" className="py-20 bg-gradient-to-b from-[var(--background)] to-[var(--background-secondary)]">
      <div className="container mx-auto px-4 lg:px-8">
        {/* Section Header */}
        <div ref={headerRef} className="text-center mb-16 animate-on-scroll">
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
            Ch∆∞∆°ng Tr√¨nh <span className="gradient-text">ƒê√†o T·∫°o</span>
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto">
            C√°c ch∆∞∆°ng tr√¨nh ƒë∆∞·ª£c thi·∫øt k·∫ø theo chu·∫©n qu·ªëc t·∫ø, k·∫øt h·ª£p l√Ω thuy·∫øt v√† th·ª±c h√†nh, 
            ƒë√°p ·ª©ng nhu c·∫ßu nh√¢n l·ª±c c·ªßa th·ªã tr∆∞·ªùng lao ƒë·ªông hi·ªán ƒë·∫°i.
          </p>
        </div>

        {/* Category Tabs */}
        <div className="flex justify-center mb-12">
          <div className="glass-effect rounded-full p-2">
            {programCategories.map((category, index) => (
              <button
                key={index}
                onClick={() => setActiveTab(index)}
                className={`px-6 py-3 rounded-full font-semibold transition-all duration-300 ${
                  activeTab === index
                    ? 'bg-gradient-to-r from-[var(--accent)] to-[var(--accent-light)] text-white'
                    : 'text-gray-300 hover:text-white'
                }`}
              >
                <span className="mr-2">{category.icon}</span>
                {category.title}
              </button>
            ))}
          </div>
        </div>

        {/* Programs Grid */}
        <div ref={gridRef} className="card-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 lg:gap-8">
          {programCategories[activeTab].programs.map((program, index) => (
            <div
              key={index}
              className="glass-effect rounded-2xl p-6 hover-glow transition-all duration-300 group animate-on-scroll"
            >
              <div className="mb-6">
                <h3 className="text-2xl font-bold text-white mb-2 group-hover:text-[var(--accent)] transition-colors">
                  {program.name}
                </h3>
                <div className="flex items-center text-[var(--accent)] font-semibold mb-4">
                  <svg className="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clipRule="evenodd" />
                  </svg>
                  {program.duration}
                </div>
                <p className="text-gray-300 leading-relaxed">
                  {program.description}
                </p>
              </div>

              {/* Skills */}
              <div className="mb-6">
                <h4 className="text-white font-semibold mb-3">K·ªπ nƒÉng ch√≠nh:</h4>
                <div className="flex flex-wrap gap-2">
                  {program.skills.map((skill, skillIndex) => (
                    <span
                      key={skillIndex}
                      className="bg-[var(--primary)]/30 text-[var(--accent)] px-3 py-1 rounded-full text-sm font-medium"
                    >
                      {skill}
                    </span>
                  ))}
                </div>
              </div>

              {/* Career */}
              <div className="mb-6">
                <h4 className="text-white font-semibold mb-2">C∆° h·ªôi ngh·ªÅ nghi·ªáp:</h4>
                <p className="text-gray-300 text-sm">
                  {program.career}
                </p>
              </div>

              {/* CTA Button */}
              <button className="w-full bg-gradient-to-r from-[var(--primary)] to-[var(--primary-light)] text-white py-3 rounded-lg font-semibold hover-glow transition-all duration-300 transform hover:scale-105">
                T√¨m hi·ªÉu th√™m
              </button>
            </div>
          ))}
        </div>

        {/* Stats */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mt-16">
          {[
            { number: "95%", label: "T·ª∑ l·ªá c√≥ vi·ªác l√†m" },
            { number: "500+", label: "Doanh nghi·ªáp ƒë·ªëi t√°c" },
            { number: "15+", label: "NƒÉm kinh nghi·ªám" },
            { number: "5000+", label: "Sinh vi√™n t·ªët nghi·ªáp" }
          ].map((stat, index) => (
            <div key={index} className="text-center">
              <div className="text-4xl md:text-5xl font-bold gradient-text mb-2">
                {stat.number}
              </div>
              <div className="text-gray-300 font-medium">
                {stat.label}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Programs;
